version: "3.9" #optional
# definition of service, volumes and networks

# docker volume ls
volumes:
  mariadb-volume:
    driver: local
    driver_opts:
      device: /home/abaudot/data/database
      type: volume
      o: bind
  wordpress-volume:
    driver: local
    driver_opts:
      device: /home/abaudot/data/wordpress
      type: volume
      o: bind
  monitoring-volume:
    driver: local
    driver_opts:
      device: /home/abaudot/data/monitoring
      type: volume
      o: bind

# docker network ls
networks:
  frontend:
  backend:
  monitoring:
  redis-net:

services:
  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
    image: nginx
    volumes:
      - wordpress-volume:/var/www/wordpress
    networks:
      - frontend
    ports:
      - "443:443"
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
    image: mariadb
    volumes:
      - mariadb-volume:/var/lib/mysql
    networks:
      - backend
    environment:
      - MARIADB_ROOT_PWD=${MARIADB_ROOT_PWD}
      - MARIADB_DB=${MARIADB_DB}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PWD=${MARIADB_PWD}
    restart: unless-stopped

  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
    build:
      context: ./requirements/wordpress
    image: wordpress
    volumes:
      - wordpress-volume:/var/www/wordpress
    networks:
      - frontend
      - backend
      - redis-net
    environment:
      - WP_URL=${WP_URL}
      - WP_DATABASE=${WP_DATABASE}
      - WP_TITLE=${WP_TITLE}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PWD=${WP_ADMIN_PWD}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
      - WP_USER_PWD=${WP_USER_PWD}
      - WP_USER=${WP_USER}
      - WP_USER_EMAIL=${WP_USER_EMAIL}
      - MARIADB_HOST=${MARIADB_HOST}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PWD=${MARIADB_PWD}
      - MARIADB_DB=${MARIADB_DB}
    restart: unless-stopped

  redis:
    container_name: redis
    build:
      context: ./requirements/bonus/redis
    image: redis
    networks:
      - redis-net
    restart: unless-stopped

  ftp-server:
    container_name: ftp
    build:
      context: ./requirements/bonus/ftp_serv

    image: ftp
    volumes:
      - wordpress-volume:/var/www/wordpress
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PWD=${FTP_PWD}
      - FTP_ROOT=${FTP_ROOT}
    ports:
      - "21:21"
    networks:
      - backend
    restart: unless-stopped

  adminer:
    container_name: adminer
    depends_on:
      - mariadb
    build:
      context: ./requirements/bonus/adminer
    image: adminer
    volumes:
      - wordpress-volume:/var/www/wordpress
    networks:
      - frontend
      - backend
    environment:
      - MARIADB_HOST=${MARIADB_HOST}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PWD=${MARIADB_PWD}
      - MARIADB_DB=${MARIADB_DB}
    restart: unless-stopped

  cadvisor:
    container_name: cadvisor
    build:
      context: ./requirements/bonus/cadvisor
    image: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
        - monitoring
    command:
      - '-port=${CADVISOR_PORT}'
      - '-url_base_prefix=${CADVISOR_URL_BASE_PREFIX}'
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    build:
      context: ./requirements/bonus/prometheus
    image: prometheus
    volumes:
      - monitoring-volume:/monitor
    networks:
      - monitoring
    environment:
      - CADVISOR_PORT=${CADVISOR_PORT}
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/monitor/prometheus'
      - '--storage.tsdb.retention=200h'
      - '--web.listen-address=:${PROMETHEUS_PORT}'
    restart: unless-stopped

  grafana:
    container_name: grafana
    build:
      context: ./requirements/bonus/grafana
    image: grafana
    volumes:
      - monitoring-volume:/monitor
    networks:
        - frontend
        - monitoring
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    restart: unless-stopped

  website:
    container_name: website
    build:
      context: ./requirements/bonus/website
    image:  website
    networks:
      - frontend
    ports:
      - "7777:7777"
    restart:  unless-stopped
